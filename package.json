{
	"name": "fun-promises",
	"version": "1.0.0-rc.3",
	"description": "A library for making Promises more friendly, fluent, and fun(ctional).",
	"main": "dist/node/cjs/index.cjs",
	"module": "dist/node/esm/index.mjs",
	"browser": "dist/browser/min/index.js",
	"source": "./index.ts",
	"repository": "git@github.com:RobertFischer/fun-promises.git",
	"author": "Robert Fischer",
	"license": "Unlicense",
	"private": false,
	"keywords": [
		"promise",
		"performance",
		"promises",
		"promises-a",
		"promises-aplus",
		"async",
		"await",
		"deferred",
		"deferreds",
		"future",
		"flow control",
		"dsl",
		"fluent interface",
		"functional programming",
		"functional"
	],
	"homepage": "https://robertfischer.github.io/fun-promises/",
	"dependencies": {
		"@babel/runtime": "^7.12.5",
		"core-js": "^3.7.0",
		"debug": "^4.2.0",
		"lodash": "^4.17.20",
		"ts-lib": "^0.0.5"
	},
	"devDependencies": {
		"@babel/cli": "^7.12.1",
		"@babel/core": "^7.12.3",
		"@babel/plugin-proposal-class-properties": "^7.12.1",
		"@babel/plugin-transform-runtime": "^7.12.1",
		"@babel/preset-env": "^7.12.1",
		"@semantic-release/changelog": "^5.0.1",
		"@semantic-release/commit-analyzer": "^8.0.1",
		"@semantic-release/git": "^9.0.0",
		"@semantic-release/github": "^7.1.1",
		"@semantic-release/npm": "^7.0.6",
		"@semantic-release/release-notes-generator": "^9.0.1",
		"@types/lodash": "^4.14.165",
		"babel-minify": "^0.5.1",
		"babel-plugin-lodash": "^3.3.4",
		"browserslist": "^4.14.7",
		"conventional-changelog-conventionalcommits": "^4.5.0",
		"cz-conventional-changelog": "^3.3.0",
		"husky": "^4.3.0",
		"jest": "^26.6.3",
		"jest-extended": "^0.11.5",
		"lint-staged": "^10.5.1",
		"parcel": "^2.0.0-beta.1",
		"prettier": "^2.1.2",
		"semantic-release": "^17.2.2",
		"semantic-release-npm-deprecate-old-versions": "^1.0.1",
		"ts-jest": "^26.4.3",
		"typedoc": "^0.19.2",
		"typedoc-plugin-nojekyll": "^1.0.1",
		"typescript": "^4.1.1-rc"
	},
	"scripts": {
		"test": "export 'DEBUG=fun-promises,fun-promises:*' && rm -rf ./dist && tsc --noEmit -p tsconfig.json && jest --detectOpenHandles --forceExit",
		"build:docs": "rm -rf ./docs && yarn build:docs:typedocs && yarn update:browserslist && yarn build:docs:coverage && yarn build:docs:changelog",
		"build:docs:typedocs": "typedoc --tsconfig tsconfig.json",
		"build:docs:coverage": "( echo '[Node]' && yarn show:coverage:node && echo '' && echo '[Browsers]' && yarn show:coverage:browsers ) | tee ./docs/coverage.txt",
		"build:docs:changelog": "cp ./CHANGELOG.md ./docs/ || true",
		"watch:compile": "tsc --watch --noEmit -p tsconfig.json",
		"watch:test": "yarn test --watch",
		"build": "yarn build:esnext && yarn build:node:cjs && yarn build:node:esm && yarn build:browser:cjs && yarn build:browser:esm && yarn build:browser:min",
		"build:esnext": "tsc -p tsconfig.json",
		"build:node:cjs": "BROWSERSLIST_ENV=node babel --config-file ./conf.d/babel/cjs.cjs --out-dir ./dist/node/cjs --out-file-extension .cjs ./dist/esnext/*.js --verbose",
		"build:node:esm": "BROWSERSLIST_ENV=node babel --config-file ./conf.d/babel/esm.cjs --out-dir ./dist/node/esm --out-file-extension .mjs ./dist/esnext/*.js --verbose",
		"build:browser:cjs": "BROWSERSLIST_ENV=browser babel --config-file ./conf.d/babel/cjs.cjs --out-dir ./dist/browser/cjs --out-file-extension .cjs ./dist/esnext/*.js --verbose",
		"build:browser:esm": "BROWSERSLIST_ENV=browser babel  --config-file ./conf.d/babel/esm.cjs  --out-dir ./dist/browser/esm --out-file-extension .mjs ./dist/esnext/*.js --verbose",
		"build:browser:min": "BROWSERSLIST_ENV=browser mkdir -p ./dist/browser/min && cp ./package.json ./dist/browser/min && cp -r ./node_modules ./dist/browser/min && cp ./conf.d/babel/cjs.cjs ./dist/browser/min/babel.config.cjs && cd ./dist/browser/min && parcel build --log-level=verbose --target browser --dist-dir . ../../esnext/index.js --no-scope-hoist && rm -r package.json node_modules babel.config.cjs",
		"prepack": "yarn build",
		"serve:docs": "yarn build:docs && http-server ./docs",
		"polish": "prettier --write .",
		"clean": "./script/clean",
		"update:browserslist": "npx browserslist@latest --update-db",
		"show:coverage:browsers": "BROWSERSLIST_ENV=browser browserslist && browserslist --coverage && browserslist --coverage=US && echo \"(The rest don't support promises.)\"",
		"show:coverage:node": "BROWSERSLIST_ENV=node browserslist && browserslist --coverage && browserslist --coverage=US"
	},
	"husky": {
		"hooks": {
			"pre-commit": "lint-staged",
			"prepare-commit-msg": "./script/has-message \"$1\" || ( exec < /dev/tty && git cz --hook )"
		}
	},
	"lint-staged": {
		"*.(js|cjs|mjs|json|yaml|yml|md|css|htm|htm|ts)": "prettier --write",
		"*.json": "jq ."
	},
	"config": {
		"commitizen": {
			"path": "./node_modules/cz-conventional-changelog"
		}
	},
	"browserslist": {
		"node": [
			"maintained node versions"
		],
		"browser": [
			"defaults and supports promises",
			"last 2 years and supports promises",
			"not dead"
		]
	}
}
