{"version":3,"file":"fun-promise.test.js","sourceRoot":"","sources":["../../../../src/fun-promise.test.js"],"names":[],"mappings":"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","sourcesContent":["/** @format */\n\nimport FunPromise from \"./fun-promise\";\nimport _ from \"lodash\";\n\nconst tokenPromise = new Promise((resolve) => resolve(true));\nconst tokenFunPromise = new FunPromise(tokenPromise);\n\ndescribe(\"FunPromise\", () => {\n\tit(\"can be constructed and resolved\", async () => {\n\t\tawait expect(new FunPromise(tokenPromise)).resolves.toBe(true);\n\t});\n\n\tdescribe(\"resolve\", () => {\n\t\t_.forEach(\n\t\t\t{ static: FunPromise, instance: tokenFunPromise },\n\t\t\t(impl, name) => {\n\t\t\t\tdescribe(name, () => {\n\t\t\t\t\tdescribe(\"resolves correctly\", () => {\n\t\t\t\t\t\tit(\"with a value\", async () => {\n\t\t\t\t\t\t\tawait expect(impl.resolve(tokenPromise)).resolves.toBe(true);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tit(\"without a value\", async () => {\n\t\t\t\t\t\t\tawait expect(impl.resolve()).resolves.toBeNil();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tit(\"rejects when provided a rejection\", async () => {\n\t\t\t\t\t\t\tawait expect(impl.resolve(Promise.reject(\"BOOM!\"))).rejects.toBe(\n\t\t\t\t\t\t\t\t\"BOOM!\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t});\n\n\tdescribe(\"then\", () => {\n\t\tit(\"works without onrejected\", async () => {\n\t\t\tawait expect(tokenFunPromise.then(_.identity)).resolves.toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"catch\", () => {\n\t\tit(\"handles rejections\", async () => {\n\t\t\tawait expect(\n\t\t\t\ttokenFunPromise\n\t\t\t\t\t.then(() => Promise.reject(\"BOOM!\"))\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\texpect(e).toBe(\"BOOM!\");\n\t\t\t\t\t\treturn \"DONE!\";\n\t\t\t\t\t})\n\t\t\t).resolves.toBe(\"DONE!\");\n\t\t});\n\n\t\tit(\"returns the error when not passed an argument\", async () => {\n\t\t\tconst error = new Error(\"BOOM!\");\n\t\t\tawait expect(\n\t\t\t\ttokenFunPromise.then(() => Promise.reject(error)).catch()\n\t\t\t).resolves.toBe(error);\n\t\t});\n\t});\n\n\tdescribe(\"arrayify\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst value = [1, 2, 3, 4];\n\t\t\tawait expect(FunPromise.resolve(value).arrayify()).resolves.toStrictEqual(\n\t\t\t\tvalue\n\t\t\t);\n\t\t});\n\n\t\tit(\"returns a clone\", async () => {\n\t\t\tconst value = [1, 2, 3, 4];\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve(value)\n\t\t\t\t\t.arrayify()\n\t\t\t\t\t.then((it) => {\n\t\t\t\t\t\tit.pop();\n\t\t\t\t\t\treturn it;\n\t\t\t\t\t})\n\t\t\t).resolves.not.toBe(value);\n\t\t\texpect(value).toHaveLength(4);\n\t\t});\n\n\t\tit(\"does not resolve arguments\", async () => {\n\t\t\tconst rejection = Promise.reject(\"BOOM!\");\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve([1, 2, rejection]).arrayify()\n\t\t\t).resolves.toBeArrayOfSize(3);\n\t\t\trejection.catch((e) => {}); // Disarm the rejection\n\t\t});\n\t});\n\n\tdescribe(\"all\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tdescribe(\"basically works\", () => {\n\t\t\t\t\t_.times(10, (argCount) => {\n\t\t\t\t\t\tconst simpleArgs = _.times(argCount, (i) => 2 ** i);\n\n\t\t\t\t\t\tfunction runAll(args) {\n\t\t\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\t\t\treturn FunPromise.all(args);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn FunPromise.resolve(args).all();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tit(`for ${argCount} arguments`, async () => {\n\t\t\t\t\t\t\tawait expect(runAll(simpleArgs)).resolves.toStrictEqual(\n\t\t\t\t\t\t\t\tsimpleArgs\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"try\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tawait expect(FunPromise.try(() => true)).resolves.toBe(true);\n\t\t});\n\n\t\tit(\"works with one argument\", async () => {\n\t\t\tawait expect(FunPromise.try((i) => i, 42)).resolves.toBe(42);\n\t\t});\n\n\t\tit(\"explodes properly\", async () => {\n\t\t\tawait expect(FunPromise.try(() => Promise.reject(\"BOOM!\"))).rejects.toBe(\n\t\t\t\t\"BOOM!\"\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe(\"map\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tfunction runMap(args, mapper) {\n\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\treturn FunPromise.map(args, mapper);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FunPromise.resolve(args).map(mapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tit(\"basically works\", async () => {\n\t\t\t\t\tawait expect(\n\t\t\t\t\t\trunMap([\"Hello\", \"Goodbye\"], (it) => `${it}, World!`)\n\t\t\t\t\t).resolves.toStrictEqual([\"Hello, World!\", \"Goodbye, World!\"]);\n\t\t\t\t});\n\n\t\t\t\tit(\"works with some test values\", async () => {\n\t\t\t\t\tconst defaultValues = [1, 2, 4, 8, 16];\n\t\t\t\t\tconst defaultMapper = (it) => {\n\t\t\t\t\t\tif (Math.random() < 0.5) {\n\t\t\t\t\t\t\treturn Promise.resolve(it * 2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn it * 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tawait expect(\n\t\t\t\t\t\trunMap(defaultValues, defaultMapper)\n\t\t\t\t\t).resolves.toStrictEqual([2, 4, 8, 16, 32]);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"Symbol.toStringTag\", () => {\n\t\tit(\"is the same as the promise passed in\", () => {\n\t\t\tconst promise = new Promise((resolve) => resolve());\n\t\t\tconst promiseTag = promise[Symbol.toStringTag];\n\t\t\texpect(promiseTag).not.toBeNil();\n\t\t\texpect(new FunPromise(promise)[Symbol.toStringTag]).toBe(promiseTag);\n\t\t});\n\t});\n\n\tdescribe(\"finally\", () => {\n\t\tit(\"returns the same promise when given no arguments\", () => {\n\t\t\texpect(tokenFunPromise.finally()).toBe(tokenFunPromise);\n\t\t});\n\n\t\tit(\"executes on resolution\", async () => {\n\t\t\tlet finallyExecuted = false;\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve(false).finally(() => {\n\t\t\t\t\tfinallyExecuted = true;\n\t\t\t\t})\n\t\t\t).resolves.toBe(false);\n\t\t\texpect(finallyExecuted).toBe(true);\n\t\t});\n\n\t\tit(\"executes on rejection\", async () => {\n\t\t\tlet finallyExecuted = false;\n\t\t\tawait expect(\n\t\t\t\tFunPromise.reject(\"BOOM!\").finally(() => {\n\t\t\t\t\tfinallyExecuted = true;\n\t\t\t\t})\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t\texpect(finallyExecuted).toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"reject\", () => {\n\t\t_.forEach(\n\t\t\t{ static: FunPromise, instance: tokenFunPromise },\n\t\t\t(impl, name) => {\n\t\t\t\tdescribe(name, () => {\n\t\t\t\t\tit(\"rejects correctly\", async () => {\n\t\t\t\t\t\tawait expect(impl.reject(true)).rejects.toBe(true);\n\t\t\t\t\t});\n\n\t\t\t\t\tit(\"doesn't change the object that is rejected\", async () => {\n\t\t\t\t\t\tconst reason = { foo: true, bar: 42 };\n\t\t\t\t\t\tawait expect(impl.reject(reason)).rejects.toBe(reason);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t});\n\n\tdescribe(\"coalesce\", () => {\n\t\tfunction runCoalesce(args, test) {\n\t\t\treturn FunPromise.coalesce(args, test);\n\t\t}\n\n\t\tit(\"basically works\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => null, Promise.resolve(() => true)])\n\t\t\t).resolves.toBe(true);\n\t\t});\n\n\t\tit(\"returns the first resolving value\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => FunPromise.delay(1000).resolve(true), () => false])\n\t\t\t).resolves.toBe(false);\n\t\t});\n\n\t\tit(\"returns the value that passes the test\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => 2, () => 4], (it) => it > 2)\n\t\t\t).resolves.toBe(4);\n\t\t});\n\n\t\tit(\"throws the error if nothing passes the test\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => Promise.reject(\"BOOM!\"), () => 4], (it) => it > 4)\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t});\n\n\t\tit(\"punts appropriately after the first resolution\", async () => {\n\t\t\tawait expect(runCoalesce(_.times(3, (idx) => () => idx))).resolves.toBe(\n\t\t\t\t0\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe(\"delay\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\t_.forEach([-1000, -1, 0, 1, 1000], (delayMs) => {\n\t\t\t\t\tdescribe(`When requesting a delay of ${delayMs} milliseconds`, () => {\n\t\t\t\t\t\tfunction runDelay(arg) {\n\t\t\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\t\t\treturn FunPromise.delay(delayMs, arg);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn FunPromise.resolve().delay(delayMs, arg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdescribe(\"basically works\", () => {\n\t\t\t\t\t\t\tit(\"with no arg\", async () => {\n\t\t\t\t\t\t\t\tawait expect(runDelay()).resolves;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tit(\"with one arg\", async () => {\n\t\t\t\t\t\t\t\tawait expect(runDelay(1000)).resolves.toBe(1000);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"simplify\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tawait expect(\n\t\t\t\tnew FunPromise(Promise.resolve(Promise.resolve(true))).simplify()\n\t\t\t).resolves.toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"filter\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tconst defaultValues = [\n\t\t\t\t\t1,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{},\n\t\t\t\t\tnull,\n\t\t\t\t\tPromise.resolve(null),\n\t\t\t\t\tPromise.resolve(),\n\t\t\t\t\t\"Hello, Dolly!\",\n\t\t\t\t];\n\t\t\t\tconst defaultExpect = [1, true, {}, \"Hello, Dolly!\"];\n\t\t\t\tconst defaultTest = (it) => !_.isNil(it);\n\t\t\t\tfunction doFilter(values = defaultValues, test = defaultTest) {\n\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\treturn FunPromise.filter(values, test);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FunPromise.resolve(values).filter(test);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tit(\"basically works\", async () => {\n\t\t\t\t\tawait expect(doFilter()).resolves.not.toBeEmpty();\n\t\t\t\t\tawait expect(doFilter()).resolves.toBeArrayOfSize(4);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"arrayifyResolved\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst value = [1, 2, 3, 4];\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve(value).arrayifyResolved()\n\t\t\t).resolves.toStrictEqual(value);\n\t\t});\n\n\t\tit(\"returns a clone\", async () => {\n\t\t\tconst value = [1, 2, 3, 4];\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve(value)\n\t\t\t\t\t.arrayifyResolved()\n\t\t\t\t\t.then((it) => {\n\t\t\t\t\t\tit.pop();\n\t\t\t\t\t\treturn it;\n\t\t\t\t\t})\n\t\t\t).resolves.not.toBe(value);\n\t\t\texpect(value).toHaveLength(4);\n\t\t});\n\n\t\tit(\"resolves arguments\", async () => {\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve([1, 2, Promise.reject(\"BOOM!\")]).arrayifyResolved()\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t});\n\t});\n});\n"]}