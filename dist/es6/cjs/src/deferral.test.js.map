{"version":3,"file":"deferral.test.js","sourceRoot":"","sources":["../../../../src/deferral.test.js"],"names":[],"mappings":";AAAA,cAAc;;;AAEd,+CAAuC;AACvC,yCAAkC;AAClC,mBAAuC;AACvC,kBAAuB;AAEvB,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC7B,MAAM,QAAQ,GAAG,IAAI,kBAAQ,EAAE,CAAC;QAChC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;YAC1B,MAAM,QAAQ,GAAG,IAAI,kBAAQ,EAAE,CAAC;YAChC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,qBAAU,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,iBAAiB,EAAE,GAAS,EAAE;YAChC,MAAM,QAAQ,GAAG,IAAI,kBAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvB,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE,GAAS,EAAE;YACxE,MAAM,QAAQ,GAAG,IAAI,kBAAQ,EAAE,CAAC;YAChC,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,iBAAiB,EAAE,GAAS,EAAE;YAChC,MAAM,QAAQ,GAAG,IAAI,kBAAQ,EAAE,CAAC;YAChC,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CACvE,SAAS,EACT,OAAO,CACP,CAAC;QACH,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,GAAS,EAAE;YAChE,MAAM,QAAQ,GAAG,IAAI,kBAAQ,EAAE,CAAC;YAChC,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CACvE,SAAS,EACT,OAAO,CACP,CAAC;YACF,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CACvE,SAAS,EACT,OAAO,CACP,CAAC;QACH,CAAC,CAAA,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/** @format */\n\nimport FunPromise from \"./fun-promise\";\nimport Deferral from \"./deferral\";\nimport { PromiseState } from \"./types\";\nimport _ from \"lodash\";\n\ndescribe(\"Deferral\", () => {\n\tit(\"can be constructed\", () => {\n\t\tconst deferral = new Deferral();\n\t\texpect(deferral).not.toBeNil();\n\t});\n\n\tdescribe(\"promise\", () => {\n\t\tit(\"is a FunPromise\", () => {\n\t\t\tconst deferral = new Deferral();\n\t\t\texpect(deferral.promise).toBeInstanceOf(FunPromise);\n\t\t});\n\t});\n\n\tdescribe(\"resolve\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst deferral = new Deferral();\n\t\t\tdeferral.resolve(true);\n\t\t\tawait expect(deferral.resolve(true)).resolves.toBe(true);\n\t\t});\n\n\t\tit(\"does not change resolved value if called multiple times\", async () => {\n\t\t\tconst deferral = new Deferral();\n\t\t\tawait expect(deferral.resolve(true)).resolves.toBe(true);\n\t\t\tawait expect(deferral.resolve(false)).resolves.toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"reject\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst deferral = new Deferral();\n\t\t\tawait expect(deferral.reject(new Error(\"BOOM!\"))).rejects.toHaveProperty(\n\t\t\t\t\"message\",\n\t\t\t\t\"BOOM!\"\n\t\t\t);\n\t\t});\n\n\t\tit(\"does not change reason if called multiple times\", async () => {\n\t\t\tconst deferral = new Deferral();\n\t\t\tawait expect(deferral.reject(new Error(\"BOOM!\"))).rejects.toHaveProperty(\n\t\t\t\t\"message\",\n\t\t\t\t\"BOOM!\"\n\t\t\t);\n\t\t\tawait expect(deferral.reject(new Error(\"BANG!\"))).rejects.toHaveProperty(\n\t\t\t\t\"message\",\n\t\t\t\t\"BOOM!\"\n\t\t\t);\n\t\t});\n\t});\n});\n"]}