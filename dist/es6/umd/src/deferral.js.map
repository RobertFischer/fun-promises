{"version":3,"file":"deferral.js","sourceRoot":"","sources":["../../../../src/deferral.ts"],"names":[],"mappings":"AAAA,cAAc;;;;;;;;;;;;IAEd,+CAAuC;IACvC,mCAAmD;IACnD,wCAAkC;IAClC,sCAAgC;IAEhC;;;;;;;;OAQG;IACH,MAAqB,QAAQ;QA6H5B;;;WAGG;QACH;YAhIA;;eAEG;YACH;;;;;eAAgC;YAEhC;;eAEG;YACH;;;;uBAAmC,oBAAY,CAAC,OAAO;eAAC;YAExD;;eAEG;YACH;;;;uBAAmE,IAAI;eAAC;YAExE;;eAEG;YACH;;;;uBAA8D,IAAI;eAAC;YA+GlE,IAAI,CAAC,OAAO,GAAG,IAAI,qBAAU,CAC5B,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC/B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;gBACxB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACxB,CAAC,CAAC,CACF,CAAC;QACH,CAAC;QAnHD;;WAEG;QACH,IAAI,KAAK;YACR,OAAO,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;QAED;;WAEG;QACH,IAAI,UAAU;YACb,QAAQ,IAAI,CAAC,UAAU,EAAE;gBACxB,KAAK,oBAAY,CAAC,SAAS;oBAC1B,OAAO,IAAI,CAAC;gBACb,KAAK,oBAAY,CAAC,SAAS;oBAC1B,OAAO,IAAI,CAAC;gBACb;oBACC,OAAO,KAAK,CAAC;aACd;QACF,CAAC;QAED;;WAEG;QACH,IAAI,SAAS;YACZ,QAAQ,IAAI,CAAC,UAAU,EAAE;gBACxB,KAAK,oBAAY,CAAC,QAAQ;oBACzB,OAAO,IAAI,CAAC;gBACb,KAAK,oBAAY,CAAC,QAAQ;oBACzB,OAAO,IAAI,CAAC;gBACb;oBACC,OAAO,KAAK,CAAC;aACd;QACF,CAAC;QAED;;WAEG;QACH,IAAI,UAAU;YACb,OAAO,IAAI,CAAC,UAAU,KAAK,oBAAY,CAAC,QAAQ,CAAC;QAClD,CAAC;QAED;;WAEG;QACH,IAAI,UAAU;YACb,OAAO,IAAI,CAAC,UAAU,KAAK,oBAAY,CAAC,QAAQ,CAAC;QAClD,CAAC;QAED;;WAEG;QACH,OAAO,CAAC,EAAE;YACT,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;YAC1B,IAAI,QAAQ,EAAE;gBACb,IAAI;oBACH,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,UAAU,GAAG,oBAAY,CAAC,SAAS,CAAC;oBACzC,eAAM,CAAC,GAAG,EAAE;wBACX,IAAI;4BACH,QAAQ,CAAC,EAAE,CAAC,CAAC;4BACb,IAAI,CAAC,UAAU,GAAG,oBAAY,CAAC,QAAQ,CAAC;yBACxC;wBAAC,OAAO,CAAC,EAAE;4BACX,IAAI,QAAQ,EAAE;gCACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gCACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;6BACf;iCAAM;gCACN,OAAO,CAAC,IAAI,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAC;6BACxD;yBACD;oBACF,CAAC,CAAC,CAAC;iBACH;gBAAC,OAAO,CAAC,EAAE;oBACX,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACf;wBAAS;oBACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACrB;aACD;YACD,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAED;;WAEG;QACH,MAAM,CAAC,CAAQ;YACd,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;YAC1B,IAAI,QAAQ,EAAE;gBACb,IAAI;oBACH,IAAI,CAAC,UAAU,GAAG,oBAAY,CAAC,SAAS,CAAC;oBACzC,eAAM,CAAC,GAAG,EAAE;wBACX,IAAI;4BACH,QAAQ,CAAC,CAAC,CAAC,CAAC;yBACZ;gCAAS;4BACT,IAAI,CAAC,UAAU,GAAG,oBAAY,CAAC,QAAQ,CAAC;yBACxC;oBACF,CAAC,CAAC,CAAC;iBACH;wBAAS;oBACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACrB;aACD;YACD,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAeD;;WAEG;QACH,IAAI,WAAW;YACd,OAAO,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;QAC5E,CAAC;QAED;;;WAGG;QACH,MAAM;YACL,IAAI,IAAI,CAAC,SAAS;gBAAE,OAAO;YAC3B,IAAI,CAAC,UAAU,GAAG,oBAAY,CAAC,SAAS,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAK,CAAC,CAAC,CAAC,wCAAwC;QACpE,CAAC;KACD;IA5JD,2BA4JC","sourcesContent":["/** @format */\n\nimport FunPromise from \"./fun-promise\";\nimport { PromiseState, Promisable } from \"./types\";\nimport _defer from \"lodash/defer\";\nimport _noop from \"lodash/noop\";\n\n/**\n * A class that is an \"inside-out\" [[`FunPromise`]]: the `resolve` and `reject` functions\n * from the callback are exposed as properties, and are therefore able to be called by\n * caller's code.\n *\n * Note that after the first call to either `resolve` or `reject`, the underlying promise\n * is settled. Any subsequent call to either `resolve` or `reject` is guaranteed to be\n * a no-op.\n */\nexport default class Deferral<T> {\n\t/**\n\t * The promise whose state is determined by `resolve` and `reject`.\n\t */\n\treadonly promise: FunPromise<T>;\n\n\t/**\n\t * The state of `promise`.\n\t */\n\tprivate stateValue: PromiseState = PromiseState.Pending;\n\n\t/**\n\t * The function used to resolve [[`promise`]].\n\t */\n\tprivate resolver: (it: Promisable<T>) => Promisable<void> | null = null;\n\n\t/**\n\t * The function used to reject [[`promise`]].\n\t */\n\tprivate rejector: (err: unknown) => Promisable<void> | null = null;\n\n\t/**\n\t * Provides the state of `promise`.\n\t */\n\tget state() {\n\t\treturn this.stateValue;\n\t}\n\n\t/**\n\t * Whether `promise` is in the process of resolving or rejecting.\n\t */\n\tget isSettling() {\n\t\tswitch (this.stateValue) {\n\t\t\tcase PromiseState.Resolving:\n\t\t\t\treturn true;\n\t\t\tcase PromiseState.Rejecting:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Whether `promise` has resolved or rejected.\n\t */\n\tget isSettled() {\n\t\tswitch (this.stateValue) {\n\t\t\tcase PromiseState.Resolved:\n\t\t\t\treturn true;\n\t\t\tcase PromiseState.Rejected:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Whether `promise` has resolved.\n\t */\n\tget isResolved() {\n\t\treturn this.stateValue === PromiseState.Resolved;\n\t}\n\n\t/**\n\t * Whether `promise` was rejected.\n\t */\n\tget isRejected() {\n\t\treturn this.stateValue === PromiseState.Rejected;\n\t}\n\n\t/**\n\t * Resolves `promise` with the given value.\n\t */\n\tresolve(it) {\n\t\tconst { resolver } = this;\n\t\tif (resolver) {\n\t\t\ttry {\n\t\t\t\tconst { rejector } = this;\n\t\t\t\tthis.stateValue = PromiseState.Resolving;\n\t\t\t\t_defer(() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresolver(it);\n\t\t\t\t\t\tthis.stateValue = PromiseState.Resolved;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (rejector) {\n\t\t\t\t\t\t\tthis.rejector = rejector;\n\t\t\t\t\t\t\tthis.reject(e);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn(`Uncaught exception during resolution`, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tthis.reject(e);\n\t\t\t} finally {\n\t\t\t\tthis.resolver = null;\n\t\t\t\tthis.rejector = null;\n\t\t\t}\n\t\t}\n\t\treturn this.promise;\n\t}\n\n\t/**\n\t * Rejects `promise` with the given cause.\n\t */\n\treject(e: Error) {\n\t\tconst { rejector } = this;\n\t\tif (rejector) {\n\t\t\ttry {\n\t\t\t\tthis.stateValue = PromiseState.Rejecting;\n\t\t\t\t_defer(() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\trejector(e);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.stateValue = PromiseState.Rejected;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\tthis.resolver = null;\n\t\t\t\tthis.rejector = null;\n\t\t\t}\n\t\t}\n\t\treturn this.promise;\n\t}\n\n\t/**\n\t * Constructs a new promise and exposes its resolve\n\t * and reject functions.\n\t */\n\tconstructor() {\n\t\tthis.promise = new FunPromise(\n\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\tthis.resolver = resolve;\n\t\t\t\tthis.rejector = reject;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Whether or not the deferral is cancelled.\n\t */\n\tget isCancelled() {\n\t\treturn !this.isSettled && this.resolver === null && this.resolver === null;\n\t}\n\n\t/**\n\t * Cancels the deferral.  If the deferral is not settled, its callbacks will\n\t * never be called. If the deferral is settled or cancelled, this is a noop.\n\t */\n\tcancel() {\n\t\tif (this.isSettled) return;\n\t\tthis.stateValue = PromiseState.Cancelled;\n\t\tthis.resolver = null;\n\t\tthis.rejector = null;\n\t\tthis.promise.catch(_noop); // Suppress \"UnhandledException\" errors.\n\t}\n}\n"]}