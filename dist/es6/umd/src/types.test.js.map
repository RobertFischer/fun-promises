{"version":3,"file":"types.test.js","sourceRoot":"","sources":["../../../../src/types.test.js"],"names":[],"mappings":"AAAA,cAAc;;;;;;;;;;;;IAEd,mCAAiD;IACjD,mCAAuB;IAEvB,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC5B,gBAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACxC,QAAQ,CAAC,mBAAmB,OAAO,GAAG,cAAc,IAAI,CAAC,SAAS,CACjE,GAAG,CACH,GAAG,EAAE,GAAG,EAAE;gBACV,MAAM,WAAW,GAAG,IAAI,mBAAW,CAAC,GAAG,CAAC,CAAC;gBAEzC,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;oBACvD,MAAM,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;oBACjD,MAAM,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QAC1B,gBAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YAChD,QAAQ,CAAC,mBAAmB,OAAO,GAAG,eAAe,GAAG,GAAG,EAAE,GAAG,EAAE;gBACjE,MAAM,SAAS,GAAG,IAAI,iBAAS,CAAC,GAAG,CAAC,CAAC;gBAErC,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;oBACxD,MAAM,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;oBAC5D,MAAM,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/** @format */\n\nimport { Fulfillment, Rejection } from \"./types\";\nimport _ from \"lodash\";\n\ndescribe(\"Fulfillment\", () => {\n\t_.forEach([true, { foo: true }], (arg) => {\n\t\tdescribe(`when passed the ${typeof arg} argument '${JSON.stringify(\n\t\t\targ\n\t\t)}'`, () => {\n\t\t\tconst fulfillment = new Fulfillment(arg);\n\n\t\t\tit(\"exposes the argument on the 'value' property\", () => {\n\t\t\t\texpect(fulfillment).toHaveProperty(\"value\", arg);\n\t\t\t});\n\n\t\t\tit(\"has a 'status' property of 'fulfilled'\", () => {\n\t\t\t\texpect(fulfillment).toHaveProperty(\"status\", \"fulfilled\");\n\t\t\t});\n\t\t});\n\t});\n});\n\ndescribe(\"Rejection\", () => {\n\t_.forEach([\"BOOM!\", new Error(\"BOOM!\")], (arg) => {\n\t\tdescribe(`when passed the ${typeof arg} argument: '${arg}'`, () => {\n\t\t\tconst rejection = new Rejection(arg);\n\n\t\t\tit(\"returns the argument in the 'reason' property\", () => {\n\t\t\t\texpect(rejection).toHaveProperty(\"reason\", arg);\n\t\t\t});\n\n\t\t\tit(\"has a 'status' property whose value is 'rejected'\", () => {\n\t\t\t\texpect(rejection).toHaveProperty(\"status\", \"rejected\");\n\t\t\t});\n\t\t});\n\t});\n});\n"]}