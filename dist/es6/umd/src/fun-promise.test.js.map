{"version":3,"file":"fun-promise.test.js","sourceRoot":"","sources":["../../../../src/fun-promise.test.js"],"names":[],"mappings":"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","sourcesContent":["/** @format */\n\nimport FunPromise from \"./fun-promise\";\nimport _ from \"lodash\";\nimport { NestedError } from \"ts-nested-error\";\n\nconst tokenPromise = new Promise((resolve) => resolve(true));\nconst tokenFunPromise = new FunPromise(tokenPromise);\n\ndescribe(\"FunPromise\", () => {\n\tit(\"can be constructed and resolved\", async () => {\n\t\tawait expect(new FunPromise(tokenPromise)).resolves.toBe(true);\n\t});\n\n\tdescribe(\"resolve\", () => {\n\t\t_.forEach(\n\t\t\t{ static: FunPromise, instance: tokenFunPromise },\n\t\t\t(impl, name) => {\n\t\t\t\tdescribe(name, () => {\n\t\t\t\t\tdescribe(\"resolves correctly\", () => {\n\t\t\t\t\t\tit(\"with a value\", async () => {\n\t\t\t\t\t\t\tawait expect(impl.resolve(tokenPromise)).resolves.toBe(true);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tit(\"without a value\", async () => {\n\t\t\t\t\t\t\tawait expect(impl.resolve()).resolves.toBeNil();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tit(\"rejects when provided a rejection\", async () => {\n\t\t\t\t\t\t\tawait expect(impl.resolve(Promise.reject(\"BOOM!\"))).rejects.toBe(\n\t\t\t\t\t\t\t\t\"BOOM!\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t});\n\n\tdescribe(\"then\", () => {\n\t\tit(\"works without onrejected\", async () => {\n\t\t\tawait expect(tokenFunPromise.then(_.identity)).resolves.toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"catch\", () => {\n\t\tit(\"handles rejections\", async () => {\n\t\t\tawait expect(\n\t\t\t\ttokenFunPromise\n\t\t\t\t\t.then(() => Promise.reject(\"BOOM!\"))\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\texpect(e).toBe(\"BOOM!\");\n\t\t\t\t\t\treturn \"DONE!\";\n\t\t\t\t\t})\n\t\t\t).resolves.toBe(\"DONE!\");\n\t\t});\n\n\t\tit(\"returns the error when not passed an argument\", async () => {\n\t\t\tconst error = new Error(\"BOOM!\");\n\t\t\tawait expect(\n\t\t\t\ttokenFunPromise.then(() => Promise.reject(error)).catch()\n\t\t\t).resolves.toBe(error);\n\t\t});\n\t});\n\n\tdescribe(\"arrayify\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst value = [1, 2, 3, 4];\n\t\t\tawait expect(FunPromise.resolve(value).arrayify()).resolves.toStrictEqual(\n\t\t\t\tvalue\n\t\t\t);\n\t\t});\n\n\t\tit(\"returns a clone\", async () => {\n\t\t\tconst value = [1, 2, 3, 4];\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve(value)\n\t\t\t\t\t.arrayify()\n\t\t\t\t\t.then((it) => {\n\t\t\t\t\t\tit.pop();\n\t\t\t\t\t\treturn it;\n\t\t\t\t\t})\n\t\t\t).resolves.not.toBe(value);\n\t\t\texpect(value).toHaveLength(4);\n\t\t});\n\n\t\tit(\"does not resolve values when called without an argument\", async () => {\n\t\t\tconst rejection = Promise.reject(\"BOOM!\");\n\t\t\ttry {\n\t\t\t\tawait expect(\n\t\t\t\t\tFunPromise.resolve([1, 2, rejection]).arrayify()\n\t\t\t\t).resolves.toBeArrayOfSize(3);\n\t\t\t} finally {\n\t\t\t\trejection.catch((e) => {}); // Disarm the rejection\n\t\t\t}\n\t\t});\n\n\t\tit(\"resolves values when called with the sole argument `true`\", async () => {\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve([\n\t\t\t\t\tPromise.resolve(1),\n\t\t\t\t\tFunPromise.resolve(2),\n\t\t\t\t]).arrayify(true)\n\t\t\t).resolves.toEqual([1, 2]);\n\t\t});\n\n\t\tit(\"rejects values when called with the sole argument `true` and a rejection in the mix\", async () => {\n\t\t\tconst rejection = Promise.reject(\"BOOM!\");\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve([1, 2, rejection]).arrayify(true)\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t});\n\n\t\tit(\"rejects values in order when called with the arguments `(true, true)`\", async () => {\n\t\t\tconst rejection1 = Promise.reject(\"BOOM!\");\n\t\t\tconst rejection2 = Promise.reject(\"BANG!\");\n\t\t\ttry {\n\t\t\t\tawait expect(\n\t\t\t\t\tFunPromise.resolve([1, 2, rejection1, rejection2]).arrayify(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t)\n\t\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t\t} finally {\n\t\t\t\trejection1.catch((e) => {}); // Disarm the rejection\n\t\t\t\trejection2.catch((e) => {}); // Disarm the rejection\n\t\t\t}\n\t\t});\n\n\t\tit(\"resolves values in order when called with the arguments `(true, true)`\", async () => {\n\t\t\tlet sawFirst = false;\n\t\t\tlet sawSecond = false;\n\t\t\tlet sawThird = false;\n\t\t\tlet sawFourth = false;\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve([\n\t\t\t\t\tFunPromise.try(() => {\n\t\t\t\t\t\texpect(sawFirst).toBe(false);\n\t\t\t\t\t\texpect(sawSecond).toBe(false);\n\t\t\t\t\t\texpect(sawThird).toBe(false);\n\t\t\t\t\t\texpect(sawFourth).toBe(false);\n\t\t\t\t\t\tsawFirst = true;\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}),\n\t\t\t\t\tFunPromise.try(() => {\n\t\t\t\t\t\texpect(sawFirst).toBe(true);\n\t\t\t\t\t\texpect(sawSecond).toBe(false);\n\t\t\t\t\t\texpect(sawThird).toBe(false);\n\t\t\t\t\t\texpect(sawFourth).toBe(false);\n\t\t\t\t\t\tsawSecond = true;\n\t\t\t\t\t\treturn 2;\n\t\t\t\t\t}),\n\t\t\t\t\tFunPromise.try(() => {\n\t\t\t\t\t\texpect(sawFirst).toBe(true);\n\t\t\t\t\t\texpect(sawSecond).toBe(true);\n\t\t\t\t\t\texpect(sawThird).toBe(false);\n\t\t\t\t\t\texpect(sawFourth).toBe(false);\n\t\t\t\t\t\tsawThird = true;\n\t\t\t\t\t\treturn 3;\n\t\t\t\t\t}),\n\t\t\t\t\tFunPromise.try(() => {\n\t\t\t\t\t\texpect(sawFirst).toBe(true);\n\t\t\t\t\t\texpect(sawSecond).toBe(true);\n\t\t\t\t\t\texpect(sawThird).toBe(true);\n\t\t\t\t\t\texpect(sawFourth).toBe(false);\n\t\t\t\t\t\tsawFourth = true;\n\t\t\t\t\t\treturn 4;\n\t\t\t\t\t}),\n\t\t\t\t]).arrayify(true, true)\n\t\t\t).resolves.toStrictEqual([1, 2, 3, 4]);\n\t\t\texpect(sawFirst).toBe(true);\n\t\t\texpect(sawSecond).toBe(true);\n\t\t\texpect(sawThird).toBe(true);\n\t\t\texpect(sawFourth).toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"all\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tdescribe(\"basically works\", () => {\n\t\t\t\t\t_.times(10, (argCount) => {\n\t\t\t\t\t\tconst simpleArgs = _.times(argCount, (i) => 2 ** i);\n\n\t\t\t\t\t\tfunction runAll(args) {\n\t\t\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\t\t\treturn FunPromise.all(args);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn FunPromise.resolve(args).all();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tit(`for ${argCount} arguments`, async () => {\n\t\t\t\t\t\t\tawait expect(runAll(simpleArgs)).resolves.toStrictEqual(\n\t\t\t\t\t\t\t\tsimpleArgs\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"try\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tawait expect(FunPromise.try(() => true)).resolves.toBe(true);\n\t\t});\n\n\t\tit(\"works with one argument\", async () => {\n\t\t\tawait expect(FunPromise.try((i) => i, 42)).resolves.toBe(42);\n\t\t});\n\n\t\tit(\"explodes properly\", async () => {\n\t\t\tawait expect(FunPromise.try(() => Promise.reject(\"BOOM!\"))).rejects.toBe(\n\t\t\t\t\"BOOM!\"\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe(\"map\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tfunction runMap(args, mapper) {\n\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\treturn FunPromise.map(args, mapper);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FunPromise.resolve(args).map(mapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tit(\"basically works\", async () => {\n\t\t\t\t\tawait expect(\n\t\t\t\t\t\trunMap([\"Hello\", \"Goodbye\"], (it) => `${it}, World!`)\n\t\t\t\t\t).resolves.toStrictEqual([\"Hello, World!\", \"Goodbye, World!\"]);\n\t\t\t\t});\n\n\t\t\t\tit(\"works with some test values\", async () => {\n\t\t\t\t\tconst defaultValues = [1, 2, 4, 8, 16];\n\t\t\t\t\tconst defaultMapper = (it) => {\n\t\t\t\t\t\tif (Math.random() < 0.5) {\n\t\t\t\t\t\t\treturn Promise.resolve(it * 2);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn it * 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tawait expect(\n\t\t\t\t\t\trunMap(defaultValues, defaultMapper)\n\t\t\t\t\t).resolves.toStrictEqual([2, 4, 8, 16, 32]);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"Symbol.toStringTag\", () => {\n\t\tit(\"is the same as the promise passed in\", () => {\n\t\t\tconst promise = new Promise((resolve) => resolve());\n\t\t\tconst promiseTag = promise[Symbol.toStringTag];\n\t\t\texpect(promiseTag).not.toBeNil();\n\t\t\texpect(new FunPromise(promise)[Symbol.toStringTag]).toBe(promiseTag);\n\t\t});\n\t});\n\n\tdescribe(\"finally\", () => {\n\t\tit(\"returns the same promise when given no arguments\", () => {\n\t\t\texpect(tokenFunPromise.finally()).toBe(tokenFunPromise);\n\t\t});\n\n\t\tit(\"executes on resolution\", async () => {\n\t\t\tlet finallyExecuted = false;\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve(false).finally(() => {\n\t\t\t\t\tfinallyExecuted = true;\n\t\t\t\t})\n\t\t\t).resolves.toBe(false);\n\t\t\texpect(finallyExecuted).toBe(true);\n\t\t});\n\n\t\tit(\"executes on rejection\", async () => {\n\t\t\tlet finallyExecuted = false;\n\t\t\tawait expect(\n\t\t\t\tFunPromise.reject(\"BOOM!\").finally(() => {\n\t\t\t\t\tfinallyExecuted = true;\n\t\t\t\t})\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t\texpect(finallyExecuted).toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"reject\", () => {\n\t\t_.forEach(\n\t\t\t{ static: FunPromise, instance: tokenFunPromise },\n\t\t\t(impl, name) => {\n\t\t\t\tdescribe(name, () => {\n\t\t\t\t\tit(\"rejects correctly\", async () => {\n\t\t\t\t\t\tawait expect(impl.reject(true)).rejects.toBe(true);\n\t\t\t\t\t});\n\n\t\t\t\t\tit(\"doesn't change the object that is rejected\", async () => {\n\t\t\t\t\t\tconst reason = { foo: true, bar: 42 };\n\t\t\t\t\t\tawait expect(impl.reject(reason)).rejects.toBe(reason);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t});\n\n\tdescribe(\"coalesce\", () => {\n\t\tfunction runCoalesce(args, test) {\n\t\t\treturn FunPromise.coalesce(args, test);\n\t\t}\n\n\t\tit(\"basically works\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => null, Promise.resolve(() => true)])\n\t\t\t).resolves.toBe(true);\n\t\t});\n\n\t\tit(\"returns the first resolving value\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => FunPromise.delay(1000).resolve(true), () => false])\n\t\t\t).resolves.toBe(false);\n\t\t});\n\n\t\tit(\"returns the value that passes the test\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => 2, () => 4], (it) => it > 2)\n\t\t\t).resolves.toBe(4);\n\t\t});\n\n\t\tit(\"throws the error if nothing passes the test\", async () => {\n\t\t\tawait expect(\n\t\t\t\trunCoalesce([() => Promise.reject(\"BOOM!\"), () => 4], (it) => it > 4)\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t});\n\n\t\tit(\"punts appropriately after the first resolution\", async () => {\n\t\t\tawait expect(runCoalesce(_.times(3, (idx) => () => idx))).resolves.toBe(\n\t\t\t\t0\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe(\"delay\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\t_.forEach([-1000, -1, 0, 1, 1000], (delayMs) => {\n\t\t\t\t\tdescribe(`When requesting a delay of ${delayMs} milliseconds`, () => {\n\t\t\t\t\t\tfunction runDelay(arg) {\n\t\t\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\t\t\treturn FunPromise.delay(delayMs, arg);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn FunPromise.resolve().delay(delayMs, arg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdescribe(\"basically works\", () => {\n\t\t\t\t\t\t\tit(\"with no arg\", async () => {\n\t\t\t\t\t\t\t\tawait expect(runDelay()).resolves;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tit(\"with one arg\", async () => {\n\t\t\t\t\t\t\t\tawait expect(runDelay(1000)).resolves.toBe(1000);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"simplify\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tawait expect(\n\t\t\t\tnew FunPromise(Promise.resolve(Promise.resolve(true))).simplify()\n\t\t\t).resolves.toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"filter\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tconst defaultValues = [\n\t\t\t\t\t1,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{},\n\t\t\t\t\tnull,\n\t\t\t\t\tPromise.resolve(null),\n\t\t\t\t\tPromise.resolve(),\n\t\t\t\t\t\"Hello, Dolly!\",\n\t\t\t\t];\n\t\t\t\tconst defaultExpect = [1, true, {}, \"Hello, Dolly!\"];\n\t\t\t\tconst defaultTest = (it) => !_.isNil(it);\n\t\t\t\tfunction doFilter(values = defaultValues, test = defaultTest) {\n\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\treturn FunPromise.filter(values, test);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FunPromise.resolve(values).filter(test);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tit(\"basically works\", async () => {\n\t\t\t\t\tawait expect(doFilter()).resolves.not.toBeEmpty();\n\t\t\t\t\tawait expect(doFilter()).resolves.toBeArrayOfSize(4);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"flatMap\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tconst defaultValues = [\n\t\t\t\t\t1,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{},\n\t\t\t\t\tnull,\n\t\t\t\t\tPromise.resolve(null),\n\t\t\t\t\tPromise.resolve(),\n\t\t\t\t\t\"Hello, Dolly!\",\n\t\t\t\t];\n\t\t\t\tconst defaultMapper = (it) => {\n\t\t\t\t\tif (_.isNil(it)) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [it];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst defaultExpect = [1, true, {}, \"Hello, Dolly!\"];\n\t\t\t\tfunction doFlatMap(values = defaultValues, mapper = defaultMapper) {\n\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\treturn FunPromise.flatMap(values, mapper);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FunPromise.resolve(values).flatMap(mapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tit(\"basically works\", async () => {\n\t\t\t\t\tawait expect(doFlatMap()).resolves.toStrictEqual(defaultExpect);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"tap\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tlet sawTap = false;\n\t\t\tawait expect(\n\t\t\t\ttokenFunPromise.tap((val) => {\n\t\t\t\t\texpect(val).toBe(true);\n\t\t\t\t\tsawTap = true;\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t).resolves.toBe(true);\n\t\t\texpect(sawTap).toBe(true);\n\t\t});\n\n\t\tit(\"rejects if it throws an exception\", async () => {\n\t\t\tlet sawTap = false;\n\t\t\tawait expect(\n\t\t\t\ttokenFunPromise.tap((val) => {\n\t\t\t\t\tsawTap = true;\n\t\t\t\t\tthrow \"BOOM!\";\n\t\t\t\t})\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t\texpect(sawTap).toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"fold\", () => {\n\t\t_.forEach([true, false], (staticVersion) => {\n\t\t\tdescribe(staticVersion ? \"static\" : \"instance\", () => {\n\t\t\t\tconst defaultValues = [1, 2, 3, 4, 5];\n\n\t\t\t\tfunction doFold(\n\t\t\t\t\tvalues = defaultValues,\n\t\t\t\t\tinitialValue = 0,\n\t\t\t\t\taccumulator = (a, b) => a + b\n\t\t\t\t) {\n\t\t\t\t\tif (staticVersion) {\n\t\t\t\t\t\treturn FunPromise.fold(values, initialValue, accumulator);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FunPromise.resolve(values).fold(initialValue, accumulator);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tit(\"basically works\", async () => {\n\t\t\t\t\tconst values = [1, 2, 3, 4, 5];\n\t\t\t\t\tawait expect(doFold()).resolves.toBe(1 + 2 + 3 + 4 + 5);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"tapCatch\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tlet sawTapCatch = false;\n\t\t\tawait expect(\n\t\t\t\tFunPromise.reject(\"BOOM!\").tapCatch((e) => {\n\t\t\t\t\tsawTapCatch = true;\n\t\t\t\t\texpect(e).toBe(\"BOOM!\");\n\t\t\t\t\treturn \"BANG!\";\n\t\t\t\t})\n\t\t\t).rejects.toBe(\"BOOM!\");\n\t\t\texpect(sawTapCatch).toBe(true);\n\t\t});\n\n\t\tit(\"nests explosions\", async () => {\n\t\t\tlet sawCatch = false;\n\t\t\tconst err1 = new Error(\"BOOM!\");\n\t\t\tconst err2 = new Error(\"BANG!\");\n\t\t\tawait expect(\n\t\t\t\tFunPromise.reject(err1)\n\t\t\t\t\t.tapCatch((e) => {\n\t\t\t\t\t\tthrow err2;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\tsawCatch = true;\n\t\t\t\t\t\texpect(e).toBeInstanceOf(NestedError);\n\t\t\t\t\t\texpect(e).toHaveProperty(\"message\", \"Error thrown in 'tapCatch'\");\n\t\t\t\t\t\texpect(e).toHaveProperty(\"innerErrors\");\n\t\t\t\t\t\texpect(e.innerErrors).toHaveLength(2);\n\t\t\t\t\t\texpect(e.innerErrors).toEqual([err1, err2]);\n\t\t\t\t\t\treturn \"Hello!\";\n\t\t\t\t\t})\n\t\t\t).resolves.toBe(\"Hello!\");\n\t\t\texpect(sawCatch).toBe(true);\n\t\t});\n\t});\n\n\tdescribe(\"tapEach\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst values = [\n\t\t\t\t123,\n\t\t\t\tPromise.resolve(true),\n\t\t\t\t\"Hello, Dolly!\",\n\t\t\t\tnull,\n\t\t\t\tundefined,\n\t\t\t];\n\t\t\tconst funPromise = FunPromise.resolve(values);\n\t\t\tlet count = 0;\n\t\t\tawait expect(\n\t\t\t\tfunPromise.tapEach(() => {\n\t\t\t\t\tcount++;\n\t\t\t\t})\n\t\t\t).resolves.toEqual(await Promise.all(values));\n\t\t\texpect(count).toBe(values.length);\n\t\t});\n\t});\n\n\tdescribe(\"wrapError\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst reason = \"BOOM!\";\n\t\t\tawait expect(\n\t\t\t\tFunPromise.reject(reason).wrapError(\"BANG!\")\n\t\t\t).rejects.toHaveProperty(\"message\", \"BANG!\");\n\t\t\tawait expect(\n\t\t\t\tFunPromise.reject(reason).wrapError(\"BANG!\")\n\t\t\t).rejects.toHaveProperty(\"innerError\");\n\t\t});\n\t});\n\n\tdescribe(\"wrapErrors\", () => {\n\t\tit(\"basically works\", async () => {\n\t\t\tconst err1 = new Error(\"BOOM!\");\n\t\t\tconst err2 = new Error(\"BANG!\");\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve([Promise.reject(err1), Promise.reject(err2)])\n\t\t\t\t\t.wrapErrors(\"ERRORS!\")\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\texpect(e).toBeInstanceOf(NestedError);\n\t\t\t\t\t\texpect(e).toHaveProperty(\"message\", \"ERRORS!\");\n\t\t\t\t\t\texpect(e.innerErrors).toHaveLength(2);\n\t\t\t\t\t\texpect(e.innerErrors).toEqual([err1, err2]);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t})\n\t\t\t).resolves.toBe(true);\n\t\t});\n\n\t\tit(\"doesn't do anything if there is no error\", async () => {\n\t\t\tconst values = [1, 2, 3, true, false, null, undefined];\n\t\t\tawait expect(\n\t\t\t\tFunPromise.resolve(values).wrapErrors(\"ERRORS!\")\n\t\t\t).resolves.toEqual(values);\n\t\t});\n\t});\n});\n"]}