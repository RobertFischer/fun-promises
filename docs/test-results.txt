$ jest --detectOpenHandles --forceExit ./*.test.js ./src/*.test.js --verbose
PASS src/fun-promise.test.js (7.173 s)
  FunPromise
    ✓ can be constructed and resolved (4 ms)
    resolve
      static
        resolves correctly
          ✓ with a value (2 ms)
          ✓ without a value (1 ms)
          ✓ rejects when provided a rejection (2 ms)
      instance
        resolves correctly
          ✓ with a value (1 ms)
          ✓ without a value (1 ms)
          ✓ rejects when provided a rejection (1 ms)
    then
      ✓ works without onrejected (1 ms)
    catch
      ✓ handles rejections (2 ms)
      ✓ returns the error when not passed an argument (1 ms)
    arrayify
      ✓ basically works (2 ms)
      ✓ returns a clone (3 ms)
      ✓ does not resolve values when called without an argument (1 ms)
      ✓ resolves values when called with the sole argument `true` (1 ms)
      ✓ rejects values in order when called with the arguments `(true, true)` (2 ms)
      ✓ resolves values in order when called with the arguments `(true, true)` (4 ms)
    all
      static
        basically works
          ✓ for 0 arguments (1 ms)
          ✓ for 1 arguments
          ✓ for 2 arguments
          ✓ for 3 arguments (2 ms)
          ✓ for 4 arguments (1 ms)
          ✓ for 5 arguments (1 ms)
          ✓ for 6 arguments (1 ms)
          ✓ for 7 arguments (11 ms)
          ✓ for 8 arguments (1 ms)
          ✓ for 9 arguments (1 ms)
      instance
        basically works
          ✓ for 0 arguments (1 ms)
          ✓ for 1 arguments (1 ms)
          ✓ for 2 arguments (1 ms)
          ✓ for 3 arguments (2 ms)
          ✓ for 4 arguments (1 ms)
          ✓ for 5 arguments (1 ms)
          ✓ for 6 arguments (1 ms)
          ✓ for 7 arguments (1 ms)
          ✓ for 8 arguments (1 ms)
          ✓ for 9 arguments
    try
      ✓ basically works
      ✓ works with one argument (1 ms)
      ✓ explodes properly (1 ms)
    map
      static
        ✓ basically works (2 ms)
        ✓ works with some test values (1 ms)
      instance
        ✓ basically works (1 ms)
        ✓ works with some test values (1 ms)
    Symbol.toStringTag
      ✓ is the same as the promise passed in (1 ms)
    finally
      ✓ returns the same promise when given no arguments (1 ms)
      ✓ executes on resolution (2 ms)
      ✓ executes on rejection (1 ms)
    reject
      static
        ✓ rejects correctly (1 ms)
        ✓ doesn't change the object that is rejected (1 ms)
      instance
        ✓ rejects correctly (1 ms)
        ✓ doesn't change the object that is rejected
    coalesce
      ✓ basically works (1 ms)
      ✓ returns the first resolving value (1013 ms)
      ✓ returns the value that passes the test (2 ms)
      ✓ throws the error if nothing passes the test (1 ms)
      ✓ punts appropriately after the first resolution (1 ms)
    delay
      static
        When requesting a delay of -1000 milliseconds
          basically works
            ✓ with no arg (2 ms)
            ✓ with one arg (7 ms)
        When requesting a delay of -1 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (1 ms)
        When requesting a delay of 0 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (1 ms)
        When requesting a delay of 1 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (1 ms)
        When requesting a delay of 1000 milliseconds
          basically works
            ✓ with no arg (2 ms)
            ✓ with one arg (1001 ms)
      instance
        When requesting a delay of -1000 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (1 ms)
        When requesting a delay of -1 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (3 ms)
        When requesting a delay of 0 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (1 ms)
        When requesting a delay of 1 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (2 ms)
        When requesting a delay of 1000 milliseconds
          basically works
            ✓ with no arg (1 ms)
            ✓ with one arg (1001 ms)
    simplify
      ✓ basically works (2 ms)
    filter
      static
        ✓ basically works (2 ms)
      instance
        ✓ basically works (2 ms)
    flatMap
      static
        ✓ basically works (2 ms)
      instance
        ✓ basically works (1 ms)
    tap
      ✓ basically works (2 ms)
      ✓ rejects if it throws an exception (1 ms)
    fold
      static
        ✓ basically works (1 ms)
      instance
        ✓ basically works

PASS ./assumptions.test.js
  lodash
    castArray
      ✓ DOES NOT turn iterables into arrays (2 ms)
    toArray
      ✓ does turn iterables into arrays (1 ms)

----------------|---------|----------|---------|---------|-------------------
File            | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
----------------|---------|----------|---------|---------|-------------------
All files       |     100 |      100 |     100 |     100 |                   
 fun-promise.ts |     100 |      100 |     100 |     100 |                   
----------------|---------|----------|---------|---------|-------------------

=============================== Coverage summary ===============================
Statements   : 100% ( 107/107 )
Branches     : 100% ( 24/24 )
Functions    : 100% ( 60/60 )
Lines        : 100% ( 90/90 )
================================================================================
Test Suites: 2 passed, 2 total
Tests:       87 passed, 87 total
Snapshots:   0 total
Time:        7.522 s
Ran all test suites matching /.\/assumptions.test.js|.\/src\/fun-promise.test.js/i.
